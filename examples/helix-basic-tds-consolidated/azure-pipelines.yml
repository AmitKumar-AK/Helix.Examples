trigger: none

resources:
- repo: self

stages:
- stage: Build
  displayName: Build stage

  jobs:  
  - job: Build
    displayName: Build and push images
    pool: Default
    steps:
    
    - task: Docker@2
      displayName: Login to DevExContainers registry
      inputs:
        containerRegistry: '$(RegistryServiceConnection)'
        command: login
        
    - task: Docker@2
      displayName: Login to Sitecore registry
      inputs:
        containerRegistry: '$(SitecoreRegistryServiceConnection)'
        command: login 

    - task: DockerCompose@0
      displayName: Build images
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: '$(SubscriptionServiceConnection)'
        azureContainerRegistry: '$(Registry)'
        dockerComposeFile: 'examples/helix-basic-tds-consolidated/docker-compose.yml'
        additionalDockerComposeFiles: ./docker-compose.override.yml
        dockerComposeFileArgs: |
          REGISTRY=$(registry)/
          VERSION=$(VERSION)
          SOLUTION_BUILD_IMAGE=mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-ltsc2019
          NUGET_SITECOREPREVIEW_USERNAME=$(NUGET_SITECOREPREVIEW_USERNAME)
          NUGET_SITECOREPREVIEW_PASSWORD=$(NUGET_SITECOREPREVIEW_PASSWORD)
          TDS_OWNER=$(TDS_OWNER)
          TDS_KEY=$(TDS_KEY)
        action: 'Build services'
        includeLatestTag: true
        arguments: '--force-rm'
        currentWorkingDirectory: 'examples/helix-basic-tds-consolidated'

    - task: DockerCompose@0
      displayName: Push images
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: '$(SubscriptionServiceConnection)'
        azureContainerRegistry: '$(Registry)'
        dockerComposeFile: 'examples/helix-basic-tds-consolidated/docker-compose.yml'
        additionalDockerComposeFiles: ./docker-compose.override.yml
        dockerComposeFileArgs: |
          REGISTRY=$(Registry)/
          VERSION=$(VERSION)
          NUGET_SITECOREPREVIEW_USERNAME=$(NUGET_SITECOREPREVIEW_USERNAME)
          NUGET_SITECOREPREVIEW_PASSWORD=$(NUGET_SITECOREPREVIEW_PASSWORD)
          TDS_OWNER=$(TDS_OWNER)
          TDS_KEY=$(TDS_KEY)
        action: 'Push services'
        includeLatestTag: true
        currentWorkingDirectory: 'examples/helix-basic-tds-consolidated'

    - task: KubernetesManifest@0
      name: bake
      displayName: Bake K8s manifests
      inputs:
        action: 'bake'
        namespace: 'default'
        renderType: 'kustomize'
        kustomizationPath: 'examples/helix-basic-tds-consolidated/k8s/'

    - publish: $(bake.manifestsBundle)
      artifact: manifests
      
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:  
  - deployment: Deploy
    displayName: Deploy to AKS
    pool: Default
    environment: 'HelixExamplesInternal.default'
    strategy:
      runOnce:
        deploy:
          steps:
          
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              kubernetesServiceConnection: $(KubernetesServiceConnection)
              namespace: 'default'
              secretType: 'dockerRegistry'
              secretName: $(ImagePullSecret)
              dockerRegistryEndpoint: $(RegistryServiceConnection)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              kubernetesServiceConnection: $(KubernetesServiceConnection)
              namespace: 'default'
              manifests: $(Pipeline.Workspace)/manifests/*
              containers: |
                $(Registry)/helix-redis:$(VERSION)
                $(Registry)/helix-mssql:$(VERSION)
                $(Registry)/helix-solr:$(VERSION)
                $(Registry)/helix-id:$(VERSION)
                $(Registry)/helix-cm:$(VERSION)
                $(Registry)/helix-cd:$(VERSION)
              imagePullSecrets: |
                $(ImagePullSecret)